name: build and release
on:
  workflow_dispatch:
  release:
    types: [created]
permissions:
  contents: write
jobs:
  build:
    name: ${{ matrix.platform.os_name }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Android-aarch64
            target: aarch64-linux-android
            bin: axs-android-arm64
          - os_name: Android-armv7
            target: armv7-linux-androideabi
            bin: axs-android-armv7
    steps:
      - uses: actions/checkout@v3

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          args: "--release"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          strip: true

      - name: Rename binary
        run: mv target/${{ matrix.platform.target }}/release/axs target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

      - name: Generate SHA-256
        run: shasum -a 256 target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }} | cut -d ' ' -f 1 > target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}.sha256

      - name: Release binary and checksum
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
            target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}.sha256

  # Linting job
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust with Clippy and Rustfmt
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Run Clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: Run Rustfmt
        run: cargo fmt --check
