name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request: {}

env:
  RUST_BACKTRACE: 1

jobs:
  # Build for Android platforms
  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - os_name: Android-aarch64
            target: aarch64-linux-android
            bin: axs-android-arm64
          - os_name: Android-armv7
            target: armv7-linux-androideabi
            bin: axs-android-arm
          - os_name: Android-x86_64
            target: x86_64-linux-android
            bin: axs-android-x64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d

      - name: Install Rust and Android targets
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Build for Android
        run: |
          export TARGET_AR=$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
          export TARGET_CC=$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/${{ matrix.platform.target }}-clang
          cargo build --release --target ${{ matrix.platform.target }}

      - name: Rename binary
        run: mv target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }} ./axs-${{ matrix.platform.os_name }}

  # Tests for Unix-like systems
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        musl: [true, false]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies for musl (if needed)
        if: ${{ matrix.musl == 'true' && matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get install clang-11 musl-tools

      - name: Run tests
        run: |
          if [ "${{ matrix.musl }}" == "true" ]; then
            TARGET_CC=clang-11 TARGET_AR=llvm-ar-11 cargo test --target x86_64-unknown-linux-musl;
          else
            cargo test;
          fi

  # Linting job
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust with Clippy and Rustfmt
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Run Clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: Run Rustfmt
        run: cargo fmt --check
